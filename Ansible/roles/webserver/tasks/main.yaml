---
- name: packages for yum and python
  import_tasks: ./00-packages.yaml
  tags: packages

- name: Install and start NGINX
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: yes
  notify: restart nginx

- name: Start and enable NGINX
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: yes

- name: Create tme user for testing
  ansible.builtin.user:
    name: tme
    comment: "Test user for ALB testing"
    shell: /bin/bash
    create_home: yes
    state: present

- name: Create www directory for tme user
  ansible.builtin.file:
    path: /home/tme/www
    state: directory
    owner: tme
    group: tme
    mode: '0755'

- name: Create test1 subdirectory
  ansible.builtin.file:
    path: /home/tme/www/test1
    state: directory
    owner: tme
    group: tme
    mode: '0755'

- name: Create test2 subdirectory
  ansible.builtin.file:
    path: /home/tme/www/test2
    state: directory
    owner: tme
    group: tme
    mode: '0755'

- name: Create index.php for test1
  ansible.builtin.copy:
    content: |
      <?php
      echo "<h1>Test1 Domain - ALB Testing</h1>";
      echo "<p>This is test1.trigpointing.me served from /home/tme/www/test1/</p>";
      echo "<p>Server: " . gethostname() . "</p>";
      echo "<p>Date: " . date('Y-m-d H:i:s') . "</p>";
      echo "<p>Request URI: " . $_SERVER['REQUEST_URI'] . "</p>";
      echo "<p>Host Header: " . $_SERVER['HTTP_HOST'] . "</p>";
      ?>
    dest: /home/tme/www/test1/index.php
    owner: tme
    group: tme
    mode: '0644'

- name: Create index.php for test2
  ansible.builtin.copy:
    content: |
      <?php
      echo "<h1>Test2 Domain - ALB Testing</h1>";
      echo "<p>This is test2.trigpointing.me served from /home/tme/www/test2/</p>";
      echo "<p>Server: " . gethostname() . "</p>";
      echo "<p>Date: " . date('Y-m-d H:i:s') . "</p>";
      echo "<p>Request URI: " . $_SERVER['REQUEST_URI'] . "</p>";
      echo "<p>Host Header: " . $_SERVER['HTTP_HOST'] . "</p>";
      ?>
    dest: /home/tme/www/test2/index.php
    owner: tme
    group: tme
    mode: '0644'

- name: Create nginx virtual host for test1.trigpointing.me
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name test1.trigpointing.me;

          root /home/tme/www/test1;
          index index.php index.html index.htm;

          location / {
              try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
          }

          location ~ /\.ht {
              deny all;
          }
      }
    dest: /etc/nginx/sites-available/test1.trigpointing.me
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Create nginx virtual host for test2.trigpointing.me
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name test2.trigpointing.me;

          root /home/tme/www/test2;
          index index.php index.html index.htm;

          location / {
              try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
          }

          location ~ /\.ht {
              deny all;
          }
      }
    dest: /etc/nginx/sites-available/test2.trigpointing.me
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Enable test1 site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/test1.trigpointing.me
    dest: /etc/nginx/sites-enabled/test1.trigpointing.me
    state: link
  notify: restart nginx

- name: Enable test2 site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/test2.trigpointing.me
    dest: /etc/nginx/sites-enabled/test2.trigpointing.me
    state: link
  notify: restart nginx

- name: Create tuk user for production
  ansible.builtin.user:
    name: tuk
    comment: "Production user for TrigpointingUK"
    shell: /bin/bash
    create_home: yes
    state: present

- name: Generate SSH keypair for tuk user
  ansible.builtin.user:
    name: tuk
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    ssh_key_comment: "tuk@{{ inventory_hostname }}"

- name: Add GitHub to known hosts for tuk user
  ansible.builtin.known_hosts:
    name: github.com
    key: "github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk="
    state: present
    path: /home/tuk/.ssh/known_hosts
  become: yes
  become_user: tuk

- name: Clone webserver repository to tuk's www directory
  ansible.builtin.git:
    repo: git@github.com:TrigpointingUK/webserver.git
    dest: /home/tuk/www
    key_file: /home/tuk/.ssh/id_rsa
    accept_hostkey: yes
  become: yes
  become_user: tuk

# Production nginx virtual hosts
- name: Create nginx virtual host for forum.trigpointing.uk
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name forum.trigpointing.uk;

          root /home/tuk/www/forum;
          index index.php index.html index.htm;

          location / {
              try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
          }

          location ~ /\.ht {
              deny all;
          }
      }
    dest: /etc/nginx/sites-available/forum.trigpointing.uk
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Create nginx virtual host for phpmyadmin.trigpointing.uk
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name phpmyadmin.trigpointing.uk;

          root /home/tuk/www/phpmyadmin;
          index index.php index.html index.htm;

          location / {
              try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
          }

          location ~ /\.ht {
              deny all;
          }
      }
    dest: /etc/nginx/sites-available/phpmyadmin.trigpointing.uk
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Create nginx virtual host for static.trigpointing.uk
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name static.trigpointing.uk;

          root /home/tuk/www/static;
          index index.php index.html index.htm;

          location / {
              try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
          }

          location ~ /\.ht {
              deny all;
          }
      }
    dest: /etc/nginx/sites-available/static.trigpointing.uk
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Create nginx virtual host for wiki.trigpointing.uk
  ansible.builtin.copy:
    content: |
      server {
          listen 80;
          server_name wiki.trigpointing.uk;

          root /home/tuk/www/wiki;
          index index.php index.html index.htm;

          location / {
              try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
          }

          location ~ /\.ht {
              deny all;
          }
      }
    dest: /etc/nginx/sites-available/wiki.trigpointing.uk
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

# Enable production sites
- name: Enable forum site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/forum.trigpointing.uk
    dest: /etc/nginx/sites-enabled/forum.trigpointing.uk
    state: link
  notify: restart nginx

- name: Enable phpmyadmin site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/phpmyadmin.trigpointing.uk
    dest: /etc/nginx/sites-enabled/phpmyadmin.trigpointing.uk
    state: link
  notify: restart nginx

- name: Enable static site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/static.trigpointing.uk
    dest: /etc/nginx/sites-enabled/static.trigpointing.uk
    state: link
  notify: restart nginx

- name: Enable wiki site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/wiki.trigpointing.uk
    dest: /etc/nginx/sites-enabled/wiki.trigpointing.uk
    state: link
  notify: restart nginx
