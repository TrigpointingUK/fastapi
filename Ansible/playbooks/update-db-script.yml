---
- name: Update database connection script to use AWS Secrets Manager
  hosts: bastions
  become: yes
  vars:
    aws_region: "eu-west-1"
    secret_name: "fastapi-admin-credentials"
  tasks:
    - name: Install AWS CLI and jq if not present
      yum:
        name:
          - awscli
          - jq
        state: present

    - name: Create updated database connection script
      copy:
        content: |
          #!/bin/bash

          # Database connection script using AWS Secrets Manager
          # This script retrieves credentials from AWS Secrets Manager

          set -e

          AWS_REGION="{{ aws_region }}"
          SECRET_NAME="{{ secret_name }}"

          echo "================================================"
          echo "FastAPI Database Connection Script"
          echo "================================================"
          echo "Retrieving credentials from AWS Secrets Manager..."
          echo "Secret: $SECRET_NAME"
          echo "Region: $AWS_REGION"
          echo ""

          # Retrieve credentials from Secrets Manager
          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id "$SECRET_NAME" \
            --region "$AWS_REGION" \
            --query SecretString \
            --output text)

          if [ $? -ne 0 ]; then
            echo "Error: Failed to retrieve credentials from AWS Secrets Manager"
            echo "Make sure AWS CLI is configured and you have permissions to access the secret"
            exit 1
          fi

          # Parse credentials from JSON
          DB_HOST=$(echo "$SECRET_JSON" | jq -r '.host' | cut -d: -f1)
          DB_PORT=$(echo "$SECRET_JSON" | jq -r '.port')
          DB_USER=$(echo "$SECRET_JSON" | jq -r '.username')
          DB_PASS=$(echo "$SECRET_JSON" | jq -r '.password')
          DB_NAME=$(echo "$SECRET_JSON" | jq -r '.dbname')

          echo "Connection details:"
          echo "Host: $DB_HOST"
          echo "Port: $DB_PORT"
          echo "Username: $DB_USER"
          echo "Database: $DB_NAME"
          echo ""
          echo "Connecting to database..."
          echo "================================================"

          # Connect to database
          mysql -h "$DB_HOST" -P "$DB_PORT" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME"
        dest: /home/ec2-user/connect_to_db.sh
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Create master database connection script
      copy:
        content: |
          #!/bin/bash

          # Master database connection script for initial setup
          # Uses the original RDS master credentials

          set -e

          AWS_REGION="eu-west-1"
          MASTER_SECRET="tuk-rds-production-fastapi"

          echo "================================================"
          echo "FastAPI Master Database Connection Script"
          echo "================================================"
          echo "Retrieving master credentials from AWS Secrets Manager..."
          echo "Secret: $MASTER_SECRET"
          echo "Region: $AWS_REGION"
          echo ""

          # Retrieve master credentials from Secrets Manager
          MASTER_JSON=$(aws secretsmanager get-secret-value \
            --secret-id "$MASTER_SECRET" \
            --region "$AWS_REGION" \
            --query SecretString \
            --output text)

          if [ $? -ne 0 ]; then
            echo "Error: Failed to retrieve master credentials from AWS Secrets Manager"
            echo "Make sure AWS CLI is configured and you have permissions to access the secret"
            exit 1
          fi

          # Parse master credentials from JSON
          DB_HOST=$(echo "$MASTER_JSON" | jq -r '.host' | cut -d: -f1)
          DB_PORT=$(echo "$MASTER_JSON" | jq -r '.port')
          DB_USER=$(echo "$MASTER_JSON" | jq -r '.username')
          DB_PASS=$(echo "$MASTER_JSON" | jq -r '.password')
          DB_NAME=$(echo "$MASTER_JSON" | jq -r '.dbname')

          echo "Master connection details:"
          echo "Host: $DB_HOST"
          echo "Port: $DB_PORT"
          echo "Username: $DB_USER"
          echo "Database: $DB_NAME"
          echo ""
          echo "Connecting to database as master user..."
          echo "================================================"

          # Connect to database as master user
          mysql -h "$DB_HOST" -P "$DB_PORT" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME"
        dest: /home/ec2-user/connect_to_db_master.sh
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Create admin user setup script
      copy:
        content: |
          #!/bin/bash

          # Script to create the admin user in the database
          # Run this after connecting with master credentials

          set -e

          AWS_REGION="eu-west-1"
          MASTER_SECRET="tuk-rds-production-fastapi"
          ADMIN_SECRET="fastapi-admin-credentials"

          echo "================================================"
          echo "FastAPI Admin User Setup Script"
          echo "================================================"

          # Get master credentials
          echo "Retrieving master credentials..."
          MASTER_JSON=$(aws secretsmanager get-secret-value \
            --secret-id "$MASTER_SECRET" \
            --region "$AWS_REGION" \
            --query SecretString \
            --output text)

          # Get admin credentials
          echo "Retrieving admin credentials..."
          ADMIN_JSON=$(aws secretsmanager get-secret-value \
            --secret-id "$ADMIN_SECRET" \
            --region "$AWS_REGION" \
            --query SecretString \
            --output text)

          # Parse credentials
          DB_HOST=$(echo "$MASTER_JSON" | jq -r '.host' | cut -d: -f1)
          DB_PORT=$(echo "$MASTER_JSON" | jq -r '.port')
          DB_NAME=$(echo "$MASTER_JSON" | jq -r '.dbname')
          MASTER_USER=$(echo "$MASTER_JSON" | jq -r '.username')
          MASTER_PASS=$(echo "$MASTER_JSON" | jq -r '.password')
          ADMIN_USER=$(echo "$ADMIN_JSON" | jq -r '.username')
          ADMIN_PASS=$(echo "$ADMIN_JSON" | jq -r '.password')

          echo "Creating admin user: $ADMIN_USER"
          echo "Database: $DB_NAME"
          echo ""

          # Create the admin user
          mysql -h "$DB_HOST" -P "$DB_PORT" -u "$MASTER_USER" -p"$MASTER_PASS" "$DB_NAME" << EOF
          CREATE USER IF NOT EXISTS '$ADMIN_USER'@'%' IDENTIFIED BY '$ADMIN_PASS';
          GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$ADMIN_USER'@'%';
          FLUSH PRIVILEGES;
          SELECT 'Admin user created successfully' as Status;
          EOF

          echo "================================================"
          echo "Admin user setup completed!"
          echo "You can now use ./connect_to_db.sh to connect as admin"
        dest: /home/ec2-user/setup_admin_user.sh
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Create webserver connection script
      copy:
        content: |
          #!/bin/bash
          echo "================================================"
          echo "FastAPI Webserver Connection"
          echo "================================================"
          echo "To connect to the webserver, use:"
          echo "ssh -i ~/.ssh/trigpointing-bastion.pem ec2-user@10.0.10.132"
          echo ""
          echo "Or use Ansible to manage the webserver:"
          echo "ansible-playbook -i inventory.yml playbooks/main.yml --limit webserver"
          echo "================================================"
        dest: /home/ec2-user/connect_to_webserver.sh
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Create AWS CLI configuration helper
      copy:
        content: |
          #!/bin/bash
          echo "================================================"
          echo "AWS CLI Configuration Helper"
          echo "================================================"
          echo "To configure AWS CLI on this instance:"
          echo "1. Copy your AWS credentials from your laptop:"
          echo "   scp -i ~/.ssh/trigpointing-bastion.pem ~/.aws/credentials ec2-user@3.9.71.10:~/.aws/"
          echo "   scp -i ~/.ssh/trigpointing-bastion.pem ~/.aws/config ec2-user@3.9.71.10:~/.aws/"
          echo ""
          echo "2. Or run 'aws configure' and enter your credentials"
          echo "================================================"
        dest: /home/ec2-user/aws_setup.sh
        owner: ec2-user
        group: ec2-user
        mode: '0755'
