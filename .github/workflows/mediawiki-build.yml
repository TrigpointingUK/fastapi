name: MediaWiki Docker Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'wiki/**'
      - '.github/workflows/mediawiki-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'wiki/**'
      - '.github/workflows/mediawiki-build.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/wiki

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Only build on push to develop or main, not on PRs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Compute build metadata
      id: build_meta
      run: |
        echo "sha7=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        echo "utc=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Build and push MediaWiki Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./wiki
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GIT_SHA=${{ steps.build_meta.outputs.sha7 }}
          BUILD_TIME=${{ steps.build_meta.outputs.utc }}

  deploy-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Deploy MediaWiki to AWS Fargate (Production)
      run: |
        # Update ECS service with new image
        aws ecs update-service \
          --cluster trigpointing-cluster \
          --service trigpointing-mediawiki-common \
          --force-new-deployment
