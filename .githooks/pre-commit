#!/bin/bash
# Pre-commit hook to run CI checks based on changed files
# To install: cp .githooks/pre-commit .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit

set -e

echo "üîç Running pre-commit CI checks..."

# Detect staged files
staged_files=$(git diff --cached --name-only)

if [[ -z "$staged_files" ]]; then
    echo "‚ö†Ô∏è  No staged files detected"
    exit 0
fi

# Categorise changes
run_fastapi_checks=false
run_terraform_checks=false
run_web_checks=false
docs_only=true

while IFS= read -r file; do
    if [[ "$file" =~ ^(api/|res/|\.github/workflows/ci\.yml) ]]; then
        run_fastapi_checks=true
        docs_only=false
    elif [[ "$file" =~ ^terraform/ ]]; then
        run_terraform_checks=true
        docs_only=false
    elif [[ "$file" =~ ^web/ ]]; then
        run_web_checks=true
        docs_only=false
    elif [[ ! "$file" =~ ^(docs/|forum/|wiki/|\.github/|Makefile|README\.md|.*\.md$) ]]; then
        # Unknown file type - warn but allow commit
        echo "‚ö†Ô∏è  File not categorised: $file"
    fi
done <<< "$staged_files"

# If only docs changed, allow commit
if [[ "$docs_only" == true ]]; then
    echo "‚ÑπÔ∏è  Only documentation files changed. Skipping CI checks."
    exit 0
fi

# Check if virtual environment is activated (only if we need to run checks)
if [[ "$run_fastapi_checks" == true ]] && [[ "$VIRTUAL_ENV" == "" ]]; then
    echo "‚ö†Ô∏è  Virtual environment not activated. Activating..."
    if [[ -f "venv/bin/activate" ]]; then
        source venv/bin/activate
    else
        echo "‚ùå Virtual environment not found. Please run: python3 -m venv venv && source venv/bin/activate && make install-dev"
        exit 1
    fi
fi

# Run FastAPI checks
if [[ "$run_fastapi_checks" == true ]]; then
    echo "üß™ Running FastAPI CI checks (api/ or res/ changed)..."
    if make ci; then
        echo "‚úÖ FastAPI CI checks passed!"
    else
        echo "‚ùå FastAPI CI checks failed! Please fix the issues before committing."
        echo "üí° Run 'make ci' to see detailed error messages."
        exit 1
    fi
fi

# Run Web checks
if [[ "$run_web_checks" == true ]]; then
    echo "üåê Running Web CI checks (web/ changed)..."
    echo "üí° Skipping web checks in git hook - will run in CI/CD"
    # Uncomment if you want to run web checks locally:
    # cd web && npm run lint && npm run type-check && npm run test
fi

# Run Terraform checks
if [[ "$run_terraform_checks" == true ]]; then
    echo "üîß Checking Terraform formatting..."
    if ! command -v terraform >/dev/null 2>&1; then
        echo "‚ùå terraform not installed. Please install Terraform."
        exit 1
    fi

    if terraform fmt -write=false -check -recursive terraform/ >/dev/null 2>&1; then
        echo "‚úÖ Terraform formatting is correct!"
    else
        echo "‚ùå Terraform files need formatting!"
        echo "üí° Run: make format"
        exit 1
    fi
fi

echo "‚úÖ All checks passed! Proceeding with commit..."
